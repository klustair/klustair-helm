# Default values for klustair.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: klustair/klustair-cli
  tag: v0.8.1
  repositoryFrontend: klustair/klustair-frontend
  tagFrontend: v0.8.0
  pullPolicy: Always

klustairfrontend:
  enabled: true
  apachedocumentroot: /var/www/public
  appkey: base64:pT9Zg64zbBgDDmH7WZXO+Kv4/NuA2zlVFAn/Jg7IV2A=
  url: local.klustair.com
  adminUser: "admin"
  adminEmail: "admin@changeme.com"
  adminPassword: # will bi autogenerated if not set
  apiToken: "d1b587807dfa59d6c933f5b4b76c625c9483a3466c8401ce3fd241749c68ded2"
  debug: false
  auth: 
    enabled: false
    register: false
    reset: false
    verify: false
  mail:
    mailer: 'smtp'
    host: 'localhost'
    port: 587
    encryption: 'tls'
    username: 'changme'
    password: 'changeme'
    fromAdress: 'klustair@localhost.com'
    fromName: 'KlustAIR system'
  ldap:
    enabled: false
    type: false
    queryfield: uid
    logging: true
    connection: 'default'
    host: 'changeme.myldap.com'
    username: '"cn=admin,dc=example,dc=org"'
    password: 'changeme'
    port: 389
    baseDN: '"ou=users,dc=example,dc=org"'
    timeout: 5
    ssl: false
    tls: false
  nginx:
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
  fpm:
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
  podLabels: {}
  pvc:
    storageClassName: ""
    size: 1Gi

klustair:
  kubeconfig: ""
#  Multiline kubeconfig example
#  kubeconfig: |
#    apiVersion: v1
#    kind: Config
#    clusters:
#      PUT THE REST OF YOUR KUBECONNFIG HERE

trivy: 
  enabled: true
  repoCredentials: ""
  username: ""
  password: ""
  registryToken: ""
  insecure: false
  nonSSL: false
  #repoCredentials: |
  #  {
  #      "myprivaterepo/privateimage:latest": {
  #          "username": "foo",
  #          "password": "bar",
  #          "insecure": "false",
  #          "nonSsl": "false"
  #      },
  #      "myprivaterepo": {
  #          "registryToken": "asdfasdf-asdfasdf-asdfasdf-asdfasdf",
  #          "insecure": "false",
  #          "nonSsl": "false"
  #      }
  #  }


postgresql:
  enabled: true
  image: 
    tag: 11
  postgresqlUsername: klustair
  # Default password if empty is a randomm 10 character alpha numeric string
  #postgresqlPassword: 
  postgresqlDatabase: klustair
  persistence:
    #storageClass: "-"
    size: 10Gi
  resources:
    requests:
      memory: 256Mi
      cpu: 250m

klustairJob:
  enabled: true
  label: ""
  schedule : "15 9 * * *"
  namespaces: "klustair"
  namespaceblacklist: "kube-system"
  kubeaudit: "all"
  keeparunner: true
  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    #name:
  rbac:
    create: false
  apiHost: "" # uses a local serverice adress if not set
  configKey: ""
  limitDate: ""
  limitNR: ""
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  podLabels: {}


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  #name:

service:
  type: ClusterIP
  port: 80

ingress:
  # Enabling TLS my require some annotations
  tls: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

nodeSelector: {}

tolerations: []

affinity: {}
